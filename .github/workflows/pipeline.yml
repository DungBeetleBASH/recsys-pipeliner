name: Pipeline

on:
  push:
  pull_request:
    branches: [main]

jobs:
  test:
    name: Pytest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --dev

      - name: Test with pytest
        run: uv run pytest

  check_for_changes:
    name: Check for package changes
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    outputs:
      has_changes: ${{ steps.check_files.outputs.has_changes }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for changes
        id: check_files
        run: |
          NUM_FILES=$(git diff --name-only HEAD^ HEAD | grep -E "(pyproject\.toml|uv\.lock|src\/.*.py)" | wc -l)
          echo "Number of changed files: $NUM_FILES"
          if ((NUM_FILES > 0)); then
            echo "Setting has_changes to true"
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "Setting has_changes to false"
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          fi

  tag_version:
    name: Tag Version
    runs-on: ubuntu-latest
    needs: [test, check_for_changes]
    if: github.ref == 'refs/heads/main' && needs.check_for_changes.outputs.has_changes == 'true'

    permissions:
      contents: write
      actions: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: "6.3.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1

      - name: Tag Version
        run: |
          echo "Tagging version: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          git tag ${{ steps.gitversion.outputs.majorMinorPatch }}
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_and_publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: [check_for_changes, tag_version]
    if: github.ref == 'refs/heads/main' && needs.check_for_changes.outputs.has_changes == 'true'
    environment:
      name: prod
      url: https://pypi.org/p/recsys-pipeliner
    permissions:
      id-token: write

    steps:
      - name: Result
        run: |
          echo "Has changes: $HAS_CHANGES"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          fetch-tags: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Build distribution package
        run: uv build --no-cache

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
